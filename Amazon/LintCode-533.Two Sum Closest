Given a sorted array and a number x, find a pair in array whose sum is closest to x.

Return the difference between the sum of the two integers and the target.

Example: Given array nums = [-1, 2, 1, -4], and target = 4.

The minimum difference is 1. (4 - (2 + 1) = 1).




 public int twoSumCloset(int[] nums, int target) {
 
 if(nums.length == 0 || nums == null ) return 0;
 
  Arrays.sort(nums);
 
  int low =0;
  int high nums.length -1;
  int diff = Integer.MAX_VALUE;
  
  while(low < high){
    int sum = nums[low]+ nums[high];
    if( sum > target){
      
      high --;
    }else{
      low ++;
    }
  
  diff = Math.min(diff, Math.abs(target -sum ));
  
  }
  
  return diff;
 }
