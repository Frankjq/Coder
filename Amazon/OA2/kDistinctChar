Given a string of lowercase alphabets, 
count all possible substrings (not necessarily distinct) 
that has exactly k distinct characters.


Input: abc, k = 2
Output: 2
Possible substrings are {"ab", "bc"}

Input: aba, k = 2
Output: 3
Possible substrings are {"ab", "ba", "aba"}

Input: aa, k = 1
Output: 3
Possible substrings are {"a", "a", "aa"}


public static int countSub(String s, int k){
      int count = 0;
      int [] word = new int [26];

      for(int i = 0; i< s.length(); i++) {
          int dist = 0;
          Arrays.fill(word, 0);

          for (int j = i; j < s.length(); j++) {
              if (word[s.charAt(j) - 'a'] == 0) {
                  dist++;
              }
              word[s.charAt(j) - 'a']++;
              if (dist == k) {
                  count++;
              }
          }
      }
  return count;
}
