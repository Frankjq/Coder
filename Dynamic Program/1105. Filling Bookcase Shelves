We have a sequence of books: the i-th book has thickness books[i][0] and height books[i][1].

We want to place these books in order onto bookcase shelves that have total width shelf_width.

We choose some of the books to place on this shelf (such that the sum of their thickness is <= shelf_width), 
then build another level of shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down.  
We repeat this process until there are no more books to place.



Input: books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4
Output: 6
Explanation:
The sum of the heights of the 3 shelves are 1 + 3 + 2 = 6.
Notice that book number 2 does not have to be on the first shelf.


Constraints:
1 <= books.length <= 1000
1 <= books[i][0] <= shelf_width <= 1000
1 <= books[i][1] <= 1000




DP problem
/*
dp[i] => min height for i-1th books
new book line  dp[i+1]  = dp[i] + book[i].height
grab previous book and form new book line from jth book  dp[i+1] =  min(dp[j] + max(book[j+1] +...+ book[i]))
*/


class Solution {
    public int minHeightShelves(int[][] books, int shelf_width) {
        int dp[] = new int [books.length + 1];
        dp[0] = 0;
        for(int i = 1; i < dp.length ; i++ ){
            int height = books[i-1][1];
            int width = books[i-1][0];
            
            dp[i] = dp[i-1] + height;

            for(int j = i-2; j >= 0 && width + books[j][0] <= shelf_width ; j--){                
                width += books[j][0];
                height = Math.max(height, books[j][1]);
                dp[i] = Math.min(dp[i], dp[j] + height);

            }

        }
        
        return dp[dp.length-1];
    }
}
