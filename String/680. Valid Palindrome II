Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.



greedy
O(n) time

class Solution {
    public boolean validPalindrome(String s) {
        if(s == null || s.length() == 0) return true;
        for(int i = 0; i< s.length()/2; i++){
            int j = s.length()-1-i;
            if(s.charAt(i) != s.charAt(j)){
                return isvalid(s, i+1, j) || isvalid(s, i, j-1);
            }
        }
        return true;
    }
    
    public boolean isvalid(String s, int i, int j){
        while(i<j){
            if(s.charAt(i)!=s.charAt(j)) return false;
            
            i++;
            j--;
        }
        return true;
    }

}
