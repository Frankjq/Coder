Given a binary tree, return all root-to-leaf paths.

Note: A leaf is a node with no children.

Example:

Input:

   1
 /   \
2     3
 \
  5

Output: ["1->2->5", "1->3"]

Explanation: All root-to-leaf paths are: 1->2->5, 1->3


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        String r = "";
        helper(root, res, r);
        return res;
    }
    
    public void helper(TreeNode node, List<String> res, String str){
        if(node == null) return;
        str += node.val + "->";
        
        if(node.left == null && node.right == null){
            res.add(str.substring(0, str.length()-2));
        }
        
        helper(node.left, res, str);
        helper(node.right, res, str);
    }
}
