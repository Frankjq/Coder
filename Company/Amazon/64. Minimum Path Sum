Given a m x n grid filled with non-negative numbers, 
find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

dp?
O(mn)

class Solution {
    public int minPathSum(int[][] grid) {
        //dp
        
        int [][] minPath = new int [grid.length][grid[0].length];
        
        minPath[0][0] = grid[0][0];
        
        for(int i = 1; i< grid.length ; i++){
            minPath[i][0] = grid[i][0] + minPath[i-1][0];
        }
        for(int i = 1; i< grid[0].length ; i++){
            minPath[0][i] = grid[0][i] + minPath[0][i-1];
        }
        
        for(int i = 1; i< grid.length ; i++){
            for(int j = 1 ; j< grid[0].length ; j++){
                if(minPath[i-1][j] > minPath[i][j-1]){
                    minPath[i][j] =  minPath[i][j-1] + grid[i][j];
                }else{
                    minPath[i][j] =  minPath[i-1][j] + grid[i][j];   
                }    
            }
        } 
        return minPath[grid.length-1][grid[0].length-1];
    }
}



