48. Rotate Image

You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Note:

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example 1:

Given input matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

rotate the input matrix in-place such that it becomes:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]

clockwise 90 degrees 

// swap two times 
// clockwise = > up to down -> symmetry

class Solution {
    public void rotate(int[][] matrix) {
        for(int i = 0; i < matrix.length /2; i++){
            int [] temp = matrix[i];
            matrix[i] = matrix[matrix.length - 1 -i];
            matrix[matrix.length - 1 -i] =  temp;
        }        
        
        for(int i = 0; i < matrix.length ; i++){
            for(int j = i +1; j < matrix.length; j++){
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        
    }
}


anticlockwise

// swap two times 
// anticlockwise = > left to right -> symmetry






