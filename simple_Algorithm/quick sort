Sort
  Quick sort
 --> divide and conquer
 --> recurision 
 
 
 O(nlgn) time 
 
 

	static void  quickSort (int [] array , int low, int high){
		 if (low < high){
				int comp = low;

				for(int i = low; i <= high ; i++ ){
						 // less than comp th element
					if(array[i] <  array[comp] ){
						
						// swap comp+1 and comp except it is i th
						if(comp+1 != i){
							int temp = array[comp];
							array[comp] = array[comp + 1];
							array[comp + 1] = temp;								
						}
						
						// swap i th and comp th element
						int temp = array[i];
						array[i] = array[comp];
						array[comp] = temp;

						comp ++;
					}	
				}
				
				quickSort(array, low , comp-1);
				quickSort(array, comp+1 , high);

		 }
	}




left = 0; right = num.length;
public void quicksort(int[] num, int left, int right){
        if(left > right) return;
        int mid = left;
        for(int i = left+1; i <= right; i ++){
            if(num[i] < num[mid]){
                swap(num,i,mid);
                swap(num,mid+1,i);
                mid++;
            }
        }
        quicksort(num,left,mid-1);
        quicksort(num,mid+1,right);
    }
    
    
    public void swap(int[] num, int a, int b){
        int temp = num[a];
        num[a] = num[b];
        num[b] =temp;
    }
